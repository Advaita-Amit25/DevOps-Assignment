pipeline {
    agent any

    stages {
        stage('Code checkout according to environment') {
            steps {
                script {
                    checkout([$class: 'GitSCM',
                              branches: [[name: '*/main']],
                              doGenerateSubmoduleConfigurations: false,
                              extensions: [[$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [[path: 'DevOps-Assignment/DevOpsDemo']]]],
                              submoduleCfg: [],
                              userRemoteConfigs: [[credentialsId: 'gtihub-credentials', url: 'https://github.com/Advaita-Amit25/DevOps-Assignment.git']]])
                }
            }
        }

        stage("Build the code") {
            steps {
                dir('DevOps-Assignment/DevOpsDemo') {
                    sh "chmod +x ./mvnw"
                    sh "./mvnw clean package"
                }
            }
        }

        stage('Create image for Docker') {
            steps {
                dir('DevOps-Assignment/DevOpsDemo') {
                    sh 'docker build -t spring:consumedbackend .'
                }
            }
        }

        stage('Run the container') {
            steps {
                dir('DevOps-Assignment/DevOpsDemo') {
                    sh 'docker run -p 5500:8080 spring:consumedbackend'
                }
            }
        }
    }
}
